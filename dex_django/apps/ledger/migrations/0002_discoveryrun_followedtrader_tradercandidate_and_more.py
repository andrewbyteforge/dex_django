# Generated by Django 5.2.5 on 2025-09-06 08:58

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ledger', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DiscoveryRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('run_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('chains', models.JSONField(default=list)),
                ('min_volume_usd', models.DecimalField(decimal_places=2, max_digits=15)),
                ('days_back', models.IntegerField()),
                ('limit', models.IntegerField()),
                ('auto_add_threshold', models.DecimalField(decimal_places=2, max_digits=5)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('total_candidates_found', models.IntegerField(default=0)),
                ('high_quality_candidates', models.IntegerField(default=0)),
                ('candidates_auto_added', models.IntegerField(default=0)),
                ('execution_time_seconds', models.IntegerField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'db_table': 'intelligence_discoveryrun',
                'indexes': [models.Index(fields=['status', '-created_at'], name='intelligenc_status_2686df_idx'), models.Index(fields=['run_id'], name='intelligenc_run_id_5bc16b_idx')],
            },
        ),
        migrations.CreateModel(
            name='FollowedTrader',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wallet_address', models.CharField(db_index=True, max_length=42)),
                ('trader_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('chain', models.CharField(default='ethereum', max_length=20)),
                ('copy_mode', models.CharField(choices=[('percentage', 'Percentage of Portfolio'), ('fixed', 'Fixed Amount'), ('proportional', 'Proportional to Original')], default='percentage', max_length=20)),
                ('copy_percentage', models.DecimalField(decimal_places=2, default=Decimal('3.00'), max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.1')), django.core.validators.MaxValueValidator(Decimal('50.0'))])),
                ('fixed_amount_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('10.0'))])),
                ('max_position_usd', models.DecimalField(decimal_places=2, default=Decimal('1000.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('50.0'))])),
                ('min_trade_value_usd', models.DecimalField(decimal_places=2, default=Decimal('50.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('10.0'))])),
                ('max_slippage_bps', models.IntegerField(default=300, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(1000)])),
                ('allowed_chains', models.JSONField(default=list)),
                ('copy_buy_only', models.BooleanField(default=False)),
                ('copy_sell_only', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('blacklisted', 'Blacklisted')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('quality_score', models.IntegerField(blank=True, null=True)),
                ('total_pnl_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('win_rate_pct', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('total_trades', models.IntegerField(default=0)),
                ('avg_trade_size_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('last_activity_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ledger_followedtrader',
                'indexes': [models.Index(fields=['wallet_address'], name='ledger_foll_wallet__5ed329_idx'), models.Index(fields=['chain', 'status'], name='ledger_foll_chain_5766d8_idx'), models.Index(fields=['is_active', 'status'], name='ledger_foll_is_acti_9afd61_idx')],
                'unique_together': {('wallet_address', 'chain')},
            },
        ),
        migrations.CreateModel(
            name='TraderCandidate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wallet_address', models.CharField(db_index=True, max_length=42)),
                ('chain', models.CharField(max_length=20)),
                ('discovered_via', models.CharField(choices=[('auto_discovery', 'Auto Discovery'), ('manual_analysis', 'Manual Analysis'), ('social_signal', 'Social Signal'), ('performance_scan', 'Performance Scan')], default='auto_discovery', max_length=50)),
                ('discovery_run_id', models.CharField(blank=True, max_length=100, null=True)),
                ('quality_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('confidence_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('total_volume_usd', models.DecimalField(decimal_places=2, max_digits=15)),
                ('win_rate_pct', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_trades', models.IntegerField()),
                ('avg_trade_size_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_drawdown_pct', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sharpe_ratio', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('risk_factors', models.JSONField(default=list)),
                ('recommended_copy_pct', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.1')), django.core.validators.MaxValueValidator(Decimal('10.0'))])),
                ('strengths', models.JSONField(default=list)),
                ('weaknesses', models.JSONField(default=list)),
                ('recommendation_text', models.TextField(blank=True, null=True)),
                ('analysis_start_date', models.DateTimeField()),
                ('analysis_end_date', models.DateTimeField()),
                ('last_active_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('candidate', 'Candidate'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('following', 'Following')], default='candidate', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'intelligence_tradercandidate',
                'indexes': [models.Index(fields=['wallet_address', 'chain'], name='intelligenc_wallet__dd2226_idx'), models.Index(fields=['quality_score', '-created_at'], name='intelligenc_quality_bed0c9_idx'), models.Index(fields=['status', 'confidence_level'], name='intelligenc_status_4e6783_idx')],
                'unique_together': {('wallet_address', 'chain', 'discovery_run_id')},
            },
        ),
        migrations.CreateModel(
            name='WalletAnalysis',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('wallet_address', models.CharField(db_index=True, max_length=42)),
                ('chain', models.CharField(max_length=20)),
                ('analysis_type', models.CharField(choices=[('discovery_scan', 'Discovery Scan'), ('manual_request', 'Manual Request'), ('periodic_update', 'Periodic Update'), ('risk_assessment', 'Risk Assessment')], max_length=30)),
                ('days_analyzed', models.IntegerField()),
                ('total_transactions', models.IntegerField()),
                ('successful_transactions', models.IntegerField()),
                ('total_volume_usd', models.DecimalField(decimal_places=2, max_digits=15)),
                ('total_fees_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('net_pnl_usd', models.DecimalField(decimal_places=2, max_digits=12)),
                ('win_rate_pct', models.DecimalField(decimal_places=2, max_digits=5)),
                ('profit_factor', models.DecimalField(blank=True, decimal_places=4, max_digits=8, null=True)),
                ('sharpe_ratio', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('max_drawdown_pct', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('risk_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('volatility_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('liquidity_risk', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=20)),
                ('unique_tokens_traded', models.IntegerField()),
                ('top_tokens_concentration', models.DecimalField(decimal_places=2, max_digits=5)),
                ('avg_position_size_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('avg_holding_period_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('trade_frequency_per_day', models.DecimalField(decimal_places=2, max_digits=6)),
                ('detailed_metrics', models.JSONField(default=dict)),
                ('risk_factors', models.JSONField(default=list)),
                ('strengths', models.JSONField(default=list)),
                ('weaknesses', models.JSONField(default=list)),
                ('overall_recommendation', models.CharField(choices=[('avoid', 'Avoid'), ('low_allocation', 'Low Allocation'), ('moderate_allocation', 'Moderate Allocation'), ('high_allocation', 'High Allocation')], max_length=20)),
                ('recommended_copy_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.0')), django.core.validators.MaxValueValidator(Decimal('10.0'))])),
                ('confidence_score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('analysis_start_date', models.DateTimeField()),
                ('analysis_end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'intelligence_walletanalysis',
                'indexes': [models.Index(fields=['wallet_address', 'chain'], name='intelligenc_wallet__16c0c2_idx'), models.Index(fields=['risk_score', '-created_at'], name='intelligenc_risk_sc_45605f_idx'), models.Index(fields=['status', 'analysis_type'], name='intelligenc_status_e144f2_idx'), models.Index(fields=['overall_recommendation', 'confidence_score'], name='intelligenc_overall_17fd79_idx')],
                'unique_together': {('wallet_address', 'chain', 'analysis_start_date')},
            },
        ),
        migrations.CreateModel(
            name='CopyTrade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_tx_hash', models.CharField(db_index=True, max_length=66)),
                ('chain', models.CharField(max_length=20)),
                ('dex_name', models.CharField(blank=True, max_length=50, null=True)),
                ('token_address', models.CharField(blank=True, max_length=42, null=True)),
                ('token_symbol', models.CharField(blank=True, max_length=20, null=True)),
                ('token_decimals', models.IntegerField(blank=True, null=True)),
                ('action', models.CharField(choices=[('BUY', 'Buy'), ('SELL', 'Sell')], max_length=10)),
                ('original_amount_usd', models.DecimalField(decimal_places=2, max_digits=12)),
                ('copy_amount_usd', models.DecimalField(decimal_places=2, max_digits=12)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('executed', 'Executed'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('copy_tx_hash', models.CharField(blank=True, max_length=66, null=True)),
                ('execution_delay_seconds', models.IntegerField(blank=True, null=True)),
                ('actual_slippage_bps', models.IntegerField(blank=True, null=True)),
                ('gas_used', models.BigIntegerField(blank=True, null=True)),
                ('gas_price_gwei', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('entry_price_usd', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('current_price_usd', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('pnl_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('pnl_pct', models.DecimalField(decimal_places=4, default=Decimal('0.00'), max_digits=8)),
                ('risk_score', models.IntegerField(blank=True, null=True)),
                ('skip_reason', models.CharField(blank=True, max_length=200, null=True)),
                ('is_paper', models.BooleanField(default=False)),
                ('original_trade_time', models.DateTimeField(blank=True, null=True)),
                ('detected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('followed_trader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='copy_trades', to='ledger.followedtrader')),
            ],
            options={
                'db_table': 'ledger_copytrade',
                'indexes': [models.Index(fields=['followed_trader', '-created_at'], name='ledger_copy_followe_4035df_idx'), models.Index(fields=['chain', 'status'], name='ledger_copy_chain_ad71e2_idx'), models.Index(fields=['original_tx_hash'], name='ledger_copy_origina_b9cd0a_idx'), models.Index(fields=['copy_tx_hash'], name='ledger_copy_copy_tx_9fd1fa_idx'), models.Index(fields=['is_paper', 'status'], name='ledger_copy_is_pape_c9d88b_idx')],
            },
        ),
    ]
